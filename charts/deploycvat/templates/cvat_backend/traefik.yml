apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-traefik-config
  namespace:  {{ .Release.Namespace }}
data:
  traefik.yml: |
    accessLog: {}
    entryPoints:
      web:
        # Listen on port 80 for incoming requests
        address: :80
    providers:
      file:
        filename: /etc/traefik/dynamic.yml
  dynamic.yml: |
    http:
      routers:
        # Define a connection between requests and services
        to-backend:
          rule: "PathPrefix(`/api/`, `/admin/`, `/static/`, `/opencv/`, `/git/`, `/profiler/`, `/django-rq`)"
          # If the rule matches, forward to the whoami service (declared below)
          service: backend
        to-frontend:
          rule: "PathPrefix(`/`)"
          service: frontend
      services:
        # Define how to reach an existing service on our infrastructure
        backend:
          loadBalancer:
            servers:
            - url: http://{{ .Release.Name }}-backend-service:8080
        frontend:
          loadBalancer:
            servers:
            - url: http://{{ .Release.Name }}-frontend-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-traefik
  namespace:  {{ .Release.Namespace }}
  labels:
    app: cvat-traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cvat-traefik
  template:
    metadata:
      labels:
        app: cvat-traefik
    spec:
      containers:
        - name: cvat-traefik
          image: traefik:v2.8
          imagePullPolicy: Always
          ports:
          - containerPort: 80
          volumeMounts:
          - mountPath: /etc/traefik
            name: config
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-traefik-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-traefik-proxy
  namespace:  {{ .Release.Namespace }}
spec:
  selector:
    app: cvat-traefik
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80